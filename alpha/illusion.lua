local a,b=package.vel_username,false;if package.vel_username==nil then return end;for c,d in pairs(_G["package"]["loaded"])do if c=="VEL_release"then b=true end end;function math.round(e,f)local g=10^(f or 0)return math.floor(e*g+0.5)/g end;function table.contains(h,i)for j,k in pairs(h)do if i==k then return true end end;return false end;local function l(m,n)local o={}for p in pairs(m)do o[#o+1]=p end;if n then table.sort(o,function(q,r)return n(m,q,r)end)else table.sort(o)end;local c=0;return function()c=c+1;if o[c]then return o[c],m[o[c]]end end end;local s={}local t={__index=s}function s.new(u)return setmetatable({interrupt=false,panic=false,panic_callback=u},t)end;function s:test(...)if self.interrupt==true and self.panic==false then self.panic=true elseif self.interrupt==true and self.panic==true then return false end;if self.interrupt==true then self.panic=true;self.panic_callback(...)end;return true end;function s:start()self.interrupt=true end;function s:stop()self.interrupt=false end;function s:trip()self.interrupt=true end;function math.round(e,f)local g=10^(f or 0)return math.floor(e*g+0.5)/g end;local v={}local w={__index=v}w.__call=function(x,y,z,A)y=y or x.p;z=z or x.y;A=A or x.r;x.p=y;x.y=z;x.r=A end;local function x(B,C,D)return setmetatable({p=B and B or 0,y=C and C or 0,r=D and D or 0},w)end;function v:offset(E,F,G)E=self.p+E or 0;F=self.y+F or 0;G=self.r+G or 0;self.p=self.p+E;self.y=self.y+F;self.r=self.r+G end;function v:clone()return setmetatable({p=self.p,y=self.y,r=self.r},w)end;function v:clone_offset(E,F,G)E=self.p+E or 0;F=self.y+F or 0;G=self.r+G or 0;return x(self.p+E,self.y+F,self.r+G)end;function v:unpack()return self.p,self.y,self.r end;function v:nullify()self.p=0;self.y=0;self.r=0 end;function w.__tostring(H)return string.format("%s, %s, %s",H.p,H.y,H.r)end;function w.__concat(H)return string.format("%s, %s, %s",H.p,H.y,H.r)end;function w.__add(H,I)if type(H)=="number"then return x(H+I.p,H+I.y,H+I.r)end;if type(I)=="number"then return x(H.p+I,H.y+I,H.r+I)end;return x(H.p+I.p,H.y+I.y,H.r+I.r)end;function w.__sub(H,I)if type(H)=="number"then return x(H-I.p,H-I.y,H-I.r)end;if type(I)=="number"then return x(H.p-I,H.y-I,H.r-I)end;return x(H.p-I.p,H.y-I.y,H.r-I.r)end;function w.__mul(H,I)if type(H)=="number"then return x(H*I.p,H*I.y,H*I.r)end;if type(I)=="number"then return x(H.p*I,H.y*I,H.r*I)end;return x(H.p*I.p,H.y*I.y,H.r*I.r)end;function w.__div(H,I)if type(H)=="number"then return x(H/I.p,H/I.y,H/I.r)end;if type(I)=="number"then return x(H.p/I,H.y/I,H.r/I)end;return x(H.p/I.p,H.y/I.y,H.r/I.r)end;function w.__pow(H,I)if type(H)=="number"then return x(math.pow(H,I.p),math.pow(H,I.y),math.pow(H,I.r))end;if type(I)=="number"then return x(math.pow(H.p,I),math.pow(H.y,I),math.pow(H.r,I))end;return x(math.pow(H.p,I.p),math.pow(H.y,I.y),math.pow(H.r,I.r))end;function w.__mod(H,I)if type(H)=="number"then return x(H%I.p,H%I.y,H%I.r)end;if type(I)=="number"then return x(H.p%I,H.y%I,H.r%I)end;return x(H.p%I.p,H.y%I.y,H.r%I.r)end;function w.__unm(H)return x(-H.p,-H.y,-H.r)end;function v:round_zero()self.p=math.floor(self.p+0.5)self.y=math.floor(self.y+0.5)self.r=math.floor(self.r+0.5)end;function v:round(f)self.p=math.round(self.p,f)self.y=math.round(self.y,f)self.r=math.round(self.r,f)end;function v:round_base(J)self.p=J*math.round(self.p/J)self.y=J*math.round(self.y/J)self.r=J*math.round(self.r/J)end;function v:rounded_zero()return x(math.floor(self.p+0.5),math.floor(self.y+0.5),math.floor(self.r+0.5))end;function v:rounded(f)return x(math.round(self.p,f),math.round(self.y,f),math.round(self.r,f))end;function v:rounded_base(J)return x(J*math.round(self.p/J),J*math.round(self.y/J),J*math.round(self.r/J))end;local K={}local L={__index=K}L.__call=function(M,N,z,O)N=N or M.x;z=z or M.y;O=O or M.z;M.x=N;M.y=z;M.z=O end;local function M(P,C,Q)return setmetatable({x=P and P or 0,y=C and C or 0,z=Q and Q or 0},L)end;function K:offset(R,F,S)R=R or 0;F=F or 0;S=S or 0;self.x=self.x+R;self.y=self.y+F;self.z=self.z+S end;function K:clone()return setmetatable({x=self.x,y=self.y,z=self.z},L)end;function K:clone_offset(R,F,S)R=R or 0;F=F or 0;S=S or 0;return setmetatable({x=self.x+R,y=self.y+F,z=self.z+S},L)end;function K:unpack()return self.x,self.y,self.z end;function K:nullify()self.x=0;self.y=0;self.z=0 end;function L.__tostring(H)return string.format("%s, %s, %s",H.x,H.y,H.z)end;function L.__concat(H)return string.format("%s, %s, %s",H.x,H.y,H.z)end;function L.__eq(H,I)return H.x==I.x and H.y==I.y and H.z==I.z end;function L.__lt(H,I)if type(H)=="number"then return H<I.x or H<I.y or H<I.z end;if type(I)=="number"then return H.x<I or H.y<I or H.z<I end;return H.x<I.x or H.y<I.y or H.z<I.z end;function L.__le(H,I)if type(H)=="number"then return H<=I.x or H<=I.y or H<=I.z end;if type(I)=="number"then return H.x<=I or H.y<=I or H.z<=I end;return H.x<=I.x or H.y<=I.y or H.z<=I.z end;function L.__add(H,I)if type(H)=="number"then return M(H+I.x,H+I.y,H+I.z)end;if type(I)=="number"then return M(H.x+I,H.y+I,H.z+I)end;return M(H.x+I.x,H.y+I.y,H.z+I.z)end;function L.__sub(H,I)if type(H)=="number"then return M(H-I.x,H-I.y,H-I.z)end;if type(I)=="number"then return M(H.x-I,H.y-I,H.z-I)end;return M(H.x-I.x,H.y-I.y,H.z-I.z)end;function L.__mul(H,I)if type(H)=="number"then return M(H*I.x,H*I.y,H*I.z)end;if type(I)=="number"then return M(H.x*I,H.y*I,H.z*I)end;return M(H.x*I.x,H.y*I.y,H.z*I.z)end;function L.__div(H,I)if type(H)=="number"then return M(H/I.x,H/I.y,H/I.z)end;if type(I)=="number"then return M(H.x/I,H.y/I,H.z/I)end;return M(H.x/I.x,H.y/I.y,H.z/I.z)end;function L.__pow(H,I)if type(H)=="number"then return M(math.pow(H,I.x),math.pow(H,I.y),math.pow(H,I.z))end;if type(I)=="number"then return M(math.pow(H.x,I),math.pow(H.y,I),math.pow(H.z,I))end;return M(math.pow(H.x,I.x),math.pow(H.y,I.y),math.pow(H.z,I.z))end;function L.__mod(H,I)if type(H)=="number"then return M(H%I.x,H%I.y,H%I.z)end;if type(I)=="number"then return M(H.x%I,H.y%I,H.z%I)end;return M(H.x%I.x,H.y%I.y,H.z%I.z)end;function L.__unm(H)return M(-H.x,-H.y,-H.z)end;function K:length2_squared()return self.x*self.x+self.y*self.y end;function K:length2()return math.sqrt(self:length2_squared())end;function K:length_squared()return self.x*self.x+self.y*self.y+self.z*self.z end;function K:length()return math.sqrt(self:length_squared())end;function K:dot_product(T)return self.x*T.x+self.y*T.y+self.z*T.z end;function K:cross_product(T)return K(self.y*T.z-self.z*T.y,self.z*T.x-self.x*T.z,self.x*T.y-self.y*T.x)end;function K:distance2(T)return(T-self):length2()end;function K:distance(T)return(T-self):length()end;function K:distance_x(T)return math.abs(self.x-T.x)end;function K:distance_y(T)return math.abs(self.y-T.y)end;function K:distance_z(T)return math.abs(self.z-T.z)end;function K:in_range(T,U)return self:distance(T)<=U end;function K:round_zero()self.x=math.floor(self.x+0.5)self.y=math.floor(self.y+0.5)self.z=math.floor(self.z+0.5)end;function K:round(f)self.x=math.round(self.x,f)self.y=math.round(self.y,f)self.z=math.round(self.z,f)end;function K:round_base(J)self.x=J*math.round(self.x/J)self.y=J*math.round(self.y/J)self.z=J*math.round(self.z/J)end;function K:rounded_zero()return M(math.floor(self.x+0.5),math.floor(self.y+0.5),math.floor(self.z+0.5))end;function K:rounded(f)return M(math.round(self.x,f),math.round(self.y,f),math.round(self.z,f))end;function K:rounded_base(J)return M(J*math.round(self.x/J),J*math.round(self.y/J),J*math.round(self.z/J))end;function K:normalize()local V=self:length()if V~=0 then self.x=self.x/V;self.y=self.y/V;self.z=self.z/V else self.x=0;self.y=0;self.z=1 end end;function K:normalized_length()return self:length()end;function K:normalized()local V=self:length()if V~=0 then return M(self.x/V,self.y/V,self.z/V)else return M(0,0,1)end end;function K:to_screen()local P,C=renderer.world_to_screen(self.x,self.y,self.z)if P==nil or C==nil then return nil end;return M(P,C)end;function K:magnitude()return math.sqrt(math.pow(self.x,2)+math.pow(self.y,2)+math.pow(self.z,2))end;function K:angle_to(W)local X=M(W.x-self.x,W.y-self.y,W.z-self.z)if X.x==0 and X.y==0 then return x(X.z>0 and 270 or 90,0)else local Y=math.deg(math.atan2(X.y,X.x))local Z=math.sqrt(X.x*X.x+X.y*X.y)local _=math.deg(math.atan2(-X.z,Z))return x(_,Y)end end;function K:trace_line_to(W,a0)a0=a0 or-1;return client.trace_line(a0,self.x,self.y,self.z,W.x,W.y,W.z)end;function K:lerp(a1,a2)return self+(a1-self)*a2 end;function K:trace_line_impact(W,a0)a0=a0 or-1;local a3,a4=client.trace_line(a0,self.x,self.y,self.z,W.x,W.y,W.z)local a5=self:lerp(W,a3)return a3,a4,a5 end;function K:trace_line_skip(W,a6,a7)a7=a7 or 10;local a3,a4=0,-1;local a5=self;local c=0;while a7>=c and a3<1 and(a4>-1 and a6(a4)or a5==self)do a3,a4,a5=a5:trace_line_impact(W,a4)c=c+1 end;return self:distance(a5)/self:distance(W),a4,a5 end;function K:trace_bullet_to(a8,W)return client.trace_bullet(a8,self.x,self.y,self.z,W.x,W.y,W.z)end;function K:closest_ray_point(a9,W)local aa=(W-a9)/a9:distance(W)local d=self-a9;local V=d:dot_product(aa)return a9+aa*V end;function K:divide_ray(W,ab)return(self*ab+W)/(1+ab)end;local function ac(a9,W,ad,ae)return M((a9.x*ae+W.x*ad)/(ad+ae),(a9.y*ae+W.y*ad)/(ad+ae),(a9.z*ae+W.z*ad)/(ad+ae))end;function K:segment_ray(W,af)local ag={}for c=0,af do ag[c]=ac(self,W,c,af-c)end;return ag end;function K:ray(W,ah)ah=ah or 128;local af={}local ai=self:distance(W)/ah;local x=self:angle_to(W)local aa=x:to_forward_vector()for c=1,ah do table.insert(af,self+aa*ai*c)end;local aj=M(0,0,0)local ak=M(0,0,0)local al=false;local am=false;for c=1,#af do aj=af[c]:to_screen()if aj~=nil then al=true;break end end;for c=#af,1,-1 do ak=af[c]:to_screen()if ak~=nil then am=true;break end end;if al and am then return aj,ak end;return nil end;function v:to_forward_vector()local an=function(ao)return ao*math.pi/180 end;local ap=math.sin(an(self.p))local aq=math.cos(an(self.p))local ar=math.sin(an(self.y))local as=math.cos(an(self.y))return M(aq*as,aq*ar,-ap)end;function v:to_up_vector()local an=function(ao)return ao*math.pi/180 end;local ap=math.sin(an(self.p))local aq=math.cos(an(self.p))local ar=math.sin(an(self.y))local as=math.cos(an(self.y))local at=math.sin(an(self.r))local au=math.cos(an(self.r))return M(au*ap*as+at*ar,au*ap*ar+at*as*-1,au*aq)end;function v:to_right_vector()local an=function(ao)return ao*math.pi/180 end;local ap=math.sin(an(self.p))local aq=math.cos(an(self.p))local ar=math.sin(an(self.y))local as=math.cos(an(self.y))local at=math.sin(an(self.r))local au=math.cos(an(self.r))return M(at*ap*as*-1+au*ar,at*ap*ar*-1+-1*au*as,-1*at*aq)end;function v:to_backward_vector()local an=function(ao)return ao*math.pi/180 end;local ap=math.sin(an(self.p))local aq=math.cos(an(self.p))local ar=math.sin(an(self.y))local as=math.cos(an(self.y))return-M(aq*as,aq*ar,-ap)end;function v:to_left_vector()local an=function(ao)return ao*math.pi/180 end;local ap=math.sin(an(self.p))local aq=math.cos(an(self.p))local ar=math.sin(an(self.y))local as=math.cos(an(self.y))local at=math.sin(an(self.r))local au=math.cos(an(self.r))return-M(at*ap*as*-1+au*ar,at*ap*ar*-1+-1*au*as,-1*at*aq)end;function v:to_down_vector()local an=function(ao)return ao*math.pi/180 end;local ap=math.sin(an(self.p))local aq=math.cos(an(self.p))local ar=math.sin(an(self.y))local as=math.cos(an(self.y))local at=math.sin(an(self.r))local au=math.cos(an(self.r))return-M(au*ap*as+at*ar,au*ap*ar+at*as*-1,au*aq)end;function v:fov_to(av,aw)local ax=self:to_forward_vector()local ay=(aw-av):normalized()local az=math.acos(ax:dot_product(ay)/ay:length())return math.max(0.0,math.deg(az))end;local aA={}local aB={__index=aA,__call=function(aC,D,aD,r,q)if D~=nil then aC:set_r(D)aC:set_g(aD)aC:set_b(r)aC:set_a(q)else return aC:unpack()end end}function aB.__tostring(aE)return string.format("%s, %s, %s, %s",aE.r,aE.g,aE.b,aE.a)end;function aB.__concat(aE)return string.format("%s, %s, %s, %s",aE.r,aE.g,aE.b,aE.a)end;function aA.rgb(D,aD,r,q,aF)if q==nil then q=255 end;local aG=aA.new(D,aD,r,0,0,0,q,aF)aG:validate_rgb_space()aG:update_hsl_space()return aG end;function aA.hsl(aH,aI,aJ,q,aF)if q==nil then q=255 end;local aG=aA.new(0,0,0,aH,aI,aJ,q,aF)aG:validate_hsl_space()aG:update_rgb_space()return aG end;function aA.hex(aK,aF)local D,aD,r,q=aA.hex_to_rgb(aK)local aG=aA.new(D,aD,r,0,0,0,q,aF)aG:validate_rgb_space()aG:update_hsl_space()return aG end;function aA.new(D,aD,r,aH,aI,aJ,q,aF)aF=aF or true;local aL;if aF==true then aL=function(aC,aM)if aM==0 then aC:update_rgb_space()else aC:update_hsl_space()end end else aL=function(aC,aM)if aM==0 then aC.rgb_updated=false else aC.hsl_updated=false end end end;local aN={r=D,g=aD,b=r,h=aH,s=aI,l=aJ,a=q,update_method=aL,rgb_updated=true,hsl_updated=true}return setmetatable(aN,aB)end;function aA:clone()local aN={r=self.r,g=self.g,b=self.b,h=self.h,s=self.s,l=self.l,a=self.a,rgb_updated=true,hsl_updated=true,update_method=self.update_method}return setmetatable(aN,aB)end;function aA:unpack()return self.r,self.g,self.b,self.a end;function aA.hex_to_rgb(aK)local V=aK:len()if V==3 then local aO=aK:sub(2)aK=aK..aO..aO elseif V==4 then aK=aK..aK:sub(2)end;aK=aK:gsub("#","")local D=tonumber("0x"..aK:sub(1,2))local aD=tonumber("0x"..aK:sub(3,4))local r=tonumber("0x"..aK:sub(5,6))local q=tonumber("0x"..aK:sub(7,8))if q==nil then q=255 end;return D,aD,r,q end;function aA:update_spaces()if self.rgb_updated==false then self:update_rgb_space()self.rgb_updated=true elseif self.hsl_updated==false then self:update_hsl_space()self.hsl_updated=true end end;function aA:update_rgb_space()local D,aD,r;if self.s==0 then D,aD,r=self.l,self.l,self.l else local function aP(B,aQ,m)if m<0 then m=m+1 end;if m>1 then m=m-1 end;if m<1/6 then return B+(aQ-B)*6*m end;if m<1/2 then return aQ end;if m<2/3 then return B+(aQ-B)*(2/3-m)*6 end;return B end;local aQ=0;if self.l<0.5 then aQ=self.l*(1+self.s)else aQ=self.l+self.s-self.l*self.s end;local B=2*self.l-aQ;local aH=self.h/360;D=aP(B,aQ,aH+1/3)aD=aP(B,aQ,aH)r=aP(B,aQ,aH-1/3)end;self.r=D*255;self.g=aD*255;self.b=r*255 end;function aA:update_hsl_space()local D,aD,r=self.r/255,self.g/255,self.b/255;local aR,aS=math.max(D,aD,r),math.min(D,aD,r)local aH,aI,aJ;aJ=(aR+aS)/2;if aR==aS then aH,aI=0,0 else local aT=aR-aS;if aJ>0.5 then aI=aT/(2-aR-aS)else aI=aT/(aR+aS)end;if aR==D then aH=(aD-r)/aT;if aD<r then aH=aH+6 end elseif aR==aD then aH=(r-D)/aT+2 elseif aR==r then aH=(D-aD)/aT+4 end;aH=aH/6*360 end;self.h,self.s,self.l=aH,aI,aJ or 255 end;function aA:validate_rgb_space()self.r=math.min(255,math.max(0,self.r))self.g=math.min(255,math.max(0,self.g))self.b=math.min(255,math.max(0,self.b))self.a=math.min(255,math.max(0,self.a))end;function aA:validate_hsl_space()self.h=math.min(360,math.max(0,self.h))self.s=math.min(1,math.max(0,self.s))self.l=math.min(1,math.max(0,self.l))self.a=math.min(255,math.max(0,self.a))end;function aA:set_r(D)self.r=D;self.update_method(self,1)end;function aA:set_g(aD)self.g=aD;self.update_method(self,1)end;function aA:set_b(r)self.b=r;self.update_method(self,1)end;function aA:set_h(aH)self.h=aH;self.update_method(self,0)end;function aA:set_s(aI)self.s=aI;self.update_method(self,0)end;function aA:set_l(aJ)self.l=aJ;self.update_method(self,0)end;function aA:set_a(q)self.a=q end;function aA:contrast(aU)aU=aU or 150;local aV=self.r*0.213+self.g*0.715+self.b*0.072;if aV<aU then return 0 end;return 1 end;function aA:shift_hue(aW)self.h=(self.h+aW)%360;self.update_method(self,0)end;function aA:shift_saturation(aW)self.s=math.min(1,math.max(0,self.s+aW))self.update_method(self,0)end;function aA:shift_lightness(aW)self.l=math.min(1,math.max(0,self.l+aW))self.update_method(self,0)end;function aA:lighten(aW)self.l=math.min(1,math.max(0,self.l+aW))self.update_method(self,0)end;function aA:darken(aW)self.l=math.min(1,math.max(0,self.l-aW))self.update_method(self,0)end;function aA:saturate(aW)self.s=math.min(1,math.max(0,self.s+aW))self.update_method(self,0)end;function aA:desaturate(aW)self.s=math.min(1,math.max(0,self.s-aW))self.update_method(self,0)end;function aA:fade_in(aW)if self.a==255 then return end;self.a=self.a+aW;if self.a>255 then self.a=255 end end;function aA:fade_out(aW)if self.a==0 then return end;self.a=self.a-aW;if self.a<0 then self.a=0 end end;function aA:is_invisible()return self.a==0 end;function aA:is_visible()return self.a>0 end;local aX={standard=nil,countdown=nil,tick=nil}local aY={}local aZ={__index=aY,__call=function(a_)if a_.started_at==nil then return 0 end;if a_.paused_at~=nil then return a_.paused_at-a_.started_at end;return globals.realtime()-a_.started_at end}function aY.new(b0,b1)b0=b0 or false;local aN=b1 or{}aN.started_at=nil;aN.paused_at=nil;local aX=setmetatable(aN,aZ)if b0==true then aX:start()end;return aX end;function aY:has_started()return self.started_at~=nil end;function aY:is_paused()return self.paused_at~=nil end;function aY:event(b2,a6)if self()>=b2 then a6(self)end end;function aY:elapsed(b3)return self()>=b3 end;function aY:start()self.started_at=globals.realtime()end;function aY:stop()self.started_at=nil;self.paused_at=nil end;function aY:restart()self:stop()self:start()end;function aY:pause()if self.started_at==nil then return end;self.paused_at=globals.realtime()end;function aY:unpause()if self.started_at==nil or self.paused_at==nil then return end;local b4=globals.realtime()-self.paused_at;self.started_at=self.started_at+b4;self.paused_at=nil end;function aY:toggle_pause()if self.paused_at==nil then self:pause()else self:unpause()end end;aX.standard=aY.new;local b5={}local b6={__index=b5,__call=function(b7)if b7.started_at==nil then return 0 end;if b7.paused_at~=nil then return b7.paused_at-b7.started_at end;return globals.tickcount()-b7.started_at end}function b5.new(b0,b1)b0=b0 or false;local aN=b1 or{}aN.started_at=nil;aN.paused_at=nil;local aX=setmetatable(aN,b6)if b0==true then aX:start()end;return aX end;function b5:has_started()return self.started_at~=nil end;function b5:is_paused()return self.paused_at~=nil end;function b5:event(b2,a6)if self()>=b2 then a6(self)end end;function aY:elapsed(b8)return self()>=b8 end;function b5:start()self.started_at=globals.tickcount()end;function b5:stop()self.started_at=nil;self.paused_at=nil end;function b5:restart()self:stop()self:start()end;function b5:pause()if self.started_at==nil then return end;self.paused_at=globals.tickcount()end;function b5:unpause()if self.started_at==nil or self.paused_at==nil then return end;local b4=globals.tickcount()-self.paused_at;self.started_at=self.started_at+b4;self.paused_at=nil end;function b5:toggle_pause()if self.paused_at==nil then self:pause()else self:unpause()end end;aX.tick=b5.new;local b9={}local ba={__index=b9,__call=function(bb)if bb.started_at==nil then return bb.count_from end;if bb.paused_at~=nil then return bb.expires_at-bb.paused_at end;return bb.expires_at-globals.realtime()end}function b9.new(b0,bc,b1)b0=b0 or false;local aN=b1 or{}aN.started_at=nil;aN.paused_at=nil;aN.expires_at=globals.realtime()+bc;aN.count_from=bc;local aX=setmetatable(aN,ba)if b0==true then aX:start()end;return aX end;function b9:has_started()return self.started_at~=nil end;function b9:is_paused()return self.paused_at~=nil end;function b9:event(b2,a6)if self()<=b2 then a6(self)end end;function b9:expired()return self()<=0 end;function b9:start()self.started_at=globals.realtime()self.expires_at=globals.realtime()+self.count_from end;function b9:stop()self.started_at=nil;self.paused_at=nil end;function b9:restart()self:stop()self:start()end;function b9:pause()if self.started_at==nil then return end;self.paused_at=globals.realtime()end;function b9:unpause()if self.started_at==nil or self.paused_at==nil then return end;local b4=globals.realtime()-self.paused_at;self.started_at=b4+self.started_at;self.expires_at=b4+self.expires_at;self.paused_at=nil end;function b9:toggle_pause()if self.paused_at==nil then self:pause()else self:unpause()end end;aX.countdown=b9.new;local function bd(be,bf,bg,...)if not be then error(string.format(bg,...),bf)end end;local bh={rage={"aimbot","other"},aa={"anti-aimbot angles","fake lag","other"},legit={"weapon type","aimbot","triggerbot","other"},visuals={"player esp","other esp","colored models","effects"},misc={"miscellaneous","settings","lua","other"},skins={"weapon skin","knife options","glove options"},config={"presets","lua"},players={"players","adjustments"},lua={"a","b"}}for bi,bj in pairs(bh)do bh[bi]={}for c=1,#bj do bh[bi][bj[c]]=true end end;local bk={}local bl={__index=bk}function bl.__call(bm,...)local bn={...}if#bn==0 then return bm:get()end;local bo={pcall(bm.set,bm,unpack(bn))}bd(bo[1],4,bo[2])return bm end;function bk.new(bp,bi,bq,br,...)local bs;local bt=false;if type(bp)=="function"then local bu={pcall(bp,bi,bq,br,...)}bd(bu[1],4,"Cannot create menu item because: %s",bu[2])bs=bu[2]else bs=bp;bt=true end;return setmetatable({tab=bi,container=bq,name=br,reference=bs,visible=true,hidden_value=nil,children={},ui_callback=nil,callbacks={},is_menu_reference=bt,getter={callback=nil,data=nil},setter={callback=nil,data=nil},parent_value_or_callback=nil},bl)end;function bk:set_hidden_value(bv)self.hidden_value=bv end;function bk:set(...)local bn={...}if self.setter.callback~=nil then bn=self.setter.callback(unpack(bn))end;local bo={pcall(ui.set,self.reference,unpack(bn))}bd(bo[1],3,"Cannot set values of menu item because: %s",bo[2])end;function bk:get()if self.visible==false and self.hidden_value~=nil then return self.hidden_value end;local bw={ui.get(self.reference)}if self.getter.callback~=nil then return self.getter.callback(bw)end;return unpack(bw)end;function bk:set_setter_callback(a6,bx)bd(type(a6)=="function",3,"Cannot set menu item setter callback: argument must be a function.")self.setter.callback=a6;self.setter.data=bx end;function bk:set_getter_callback(a6,bx)bd(type(a6)=="function",3,"Cannot set menu item getter callback: argument must be a function.")self.getter.callback=a6;self.getter.data=bx end;function bk:add_children(by,bz)if bz==nil then bz=true end;if getmetatable(by)==bl then by={by}end;for j,bA in pairs(by)do bd(getmetatable(bA)==bl,3,"Cannot add child to menu item: children must be menu item objects. Make sure you are not trying to parent a UI reference.")bd(bA.reference~=self.reference,3,"Cannot parent a menu item to iself.")bA.parent_value_or_callback=bz;self.children[bA.reference]=bA end;bk._process_callbacks(self)end;function bk:add_callback(a6)bd(self.is_menu_reference==false,3,"Cannot add callbacks to built-in menu items.")bd(type(a6)=="function",3,"Callbacks for menu items must be functions.")table.insert(self.callbacks,a6)bk._process_callbacks(self)end;function bk._process_callbacks(bm)local a6=function()for j,bA in pairs(bm.children)do local bB;if type(bA.parent_value_or_callback)=="function"then bB=bA.parent_value_or_callback()else bB=bm:get()==bA.parent_value_or_callback end;local bC=bB==true and bm.visible==true;bA.visible=bC;ui.set_visible(bA.reference,bC)if bA.ui_callback~=nil then bA.ui_callback()end end;for c=1,#bm.callbacks do bm.callbacks[c]()end end;ui.set_callback(bm.reference,a6)bm.ui_callback=a6;a6()end;local bD={}local bE={__index=bD}function bD.new(bi,bq)bD._validate_tab_container(bi,bq)return setmetatable({tab=bi,container=bq,children={}},bE)end;function bD:save_to_db()local bF=string.format("%s_%s",self.tab,self.container)for j,bm in pairs(self.children)do local bG=string.format("%s_%s",bF,bm.name)local bx={bm()}database.write(bG,bx)end end;function bD:load_from_db()local bF=string.format("%s_%s",self.tab,self.container)for j,bm in pairs(self.children)do local bG=string.format("%s_%s",bF,bm.name)local bx=database.read(bG)if bx~=nil then bm(unpack(bx))end end end;function bD:parent_all_to(bm,bz)local by=self.children;by[bm.reference]=nil;bm:add_children(by,bz)end;function bD.reference(bi,bq,br)bD._validate_tab_container(bi,bq)local bH={pcall(ui.reference,bi,bq,br)}bd(bH[1],3,"Cannot reference Gamesense menu item because: %s",bH[2])local bI={select(2,unpack(bH))}local bJ={}for c=1,#bI do table.insert(bJ,bk.new(bI[c],bi,bq,br))end;return unpack(bJ)end;function bD:checkbox(br)return self:_create_item(ui.new_checkbox,br)end;function bD:slider(br,aS,aR,bK,bL,bM,bN,bO)if type(bK)=="table"then local bP=bK;bK=bP.default;bL=bP.show_tooltip;bM=bP.unit;bN=bP.scale;bO=bP.tooltips end;bK=bK or nil;bL=bL or true;bM=bM or nil;bN=bN or 1;bO=bO or nil;bd(type(aS)=="number",3,"Slider min value must be a number.")bd(type(aR)=="number",3,"Slider max value must be a number.")bd(aS<aR,3,"Slider min value must be below the max value.")if bK~=nil then bd(bK>=aS and bK<=aR,3,"Slider default must be between min and max values.")end;return self:_create_item(ui.new_slider,br,aS,aR,bK,bL,bM,bN,bO)end;function bD:combobox(br,...)local bn={...}if type(bn[1])=="table"then bn=bn[1]end;return self:_create_item(ui.new_combobox,br,bn)end;function bD:multiselect(br,...)local bn={...}if type(bn[1])=="table"then bn=bn[1]end;return self:_create_item(ui.new_multiselect,br,bn)end;function bD:hotkey(br,bQ)if bQ==nil then bQ=false end;bd(type(bQ)=="boolean",3,"Hotkey inline argument must be a boolean.")return self:_create_item(ui.new_hotkey,br,bQ)end;function bD:button(br,a6)bd(type(a6)=="function",3,"Cannot set button callback because the callback argument must be a function.")return self:_create_item(ui.new_button,br,a6)end;function bD:color_picker(br,D,aD,r,q)D=D or 255;aD=aD or 255;r=r or 255;q=q or 255;bd(type(D)=="number"and D>=0 and D<=255,3,"Cannot set color picker red channel value. It must be between 0 and 255.")bd(type(aD)=="number"and aD>=0 and aD<=255,3,"Cannot set color picker green channel value. It must be between 0 and 255.")bd(type(r)=="number"and r>=0 and r<=255,3,"Cannot set color picker blue channel value. It must be between 0 and 255.")bd(type(q)=="number"and q>=0 and q<=255,3,"Cannot set color picker alpha channel value. It must be between 0 and 255.")return self:_create_item(ui.new_color_picker,br,D,aD,r,q)end;function bD:textbox(br)return self:_create_item(ui.new_textbox,br)end;function bD:listbox(br,...)local bn={...}if type(bn[1])=="table"then bn=bn[1]end;local bm=self:_create_item(ui.new_listbox,br,bn)bm:set_getter_callback(function(bw)return bm.getter.data[bw+1]end,bn)return bm end;function bD:label(br)bd(type(br)=="string","Label name must be a string.")return self:_create_item(ui.new_label,br)end;function bD:_create_item(bp,br,...)bd(type(br)=="string"and br~="",3,"Cannot create menu item: name must be a non-empty string.")local bm=bk.new(bp,self.tab,self.container,br,...)self.children[bm.reference]=bm;return bm end;function bD._validate_tab_container(bi,bq)bd(type(bi)=="string"and bi~="",4,"Cannot create menu manager: tab name must be a non-empty string.")bd(type(bq)=="string"and bq~="",4,"Cannot create menu manager: tab name must be a non-empty string.")bi=bi:lower()bd(bh[bi]~=nil,4,"Cannot create menu manager: tab name does not exist.")bd(bh[bi][bq:lower()]~=nil,4,"Cannot create menu manager: container name does not exist.")end;local bR={}local bS={__index=bR}function bR.new(br,bT,bP,bU)local bV;local bW;if bP.datatype~=nil then if type(bP.save_value)=="boolean"then bV=bP.save_value else bV=true end;if bV==true and type(bP.persist_value)=="boolean"then bW=bP.persist_value else bW=true end end;local aN={name=br,description=bT,on_input=bU,on_reset=bP.on_reset or nil,datatype=bP.datatype or nil,save_value=bV,persist_value=bW,value=bP.default or nil,default=bP.default or nil,input_value=nil,special=bP.special or false}local bX=setmetatable(aN,bS)if bP.on_load~=nil then bP.on_load(bX)end;return bX end;local bY={}local bZ={__index=bY}function bY.new()local aN={problem=false,reason=nil}local b_=setmetatable(aN,bZ)return b_ end;local c0={}local c1={__index=c0}function c0.new(bF,bP)local aN={prefix=bF and bF.."_"or nil,log_prefix=bP.log_prefix or string.format("[%s]",bF),log_prefix_color=bP.log_prefix_color or{200,200,200},debug=false,commands={[bF.."_help"]=bR.new(bF.."_help","Display help information for this console command group.",{special=true},function(c2)c2:log({},"Command Help")c2:log({prefix=false},"The following list is all of the available commands for this command group.")c2:log({prefix=false}," ")for j,bX in pairs(c2.commands)do local c3=bX.datatype~=nil and string.format("# %s ( %s arg )",bX.name,bX.datatype)or"# "..bX.name;c2:log({prefix=false},"--------------------")c2:log({prefix=false},c3)c2:log({prefix=false},bX.description)if bX.save_value==true and(bX.special==false or bX.datatype~=nil)then c2:log({prefix=false},string.format("- current value = %s",bX.value))end;if bX.default~=nil then c2:log({prefix=false},string.format("- default value = %s",bX.default))end;if bX.datatype~=nil then if bX.save_value==true and bX.persist_value==true then c2:log({prefix=false},"- persisted = true")else c2:log({prefix=false},"- persisted = false")end end;c2:log({prefix=false}," ")end end),[bF.."_reset"]=bR.new(bF.."_reset","Reset a command to its default value.",{special=true,save_value=false,datatype="string"},function(c2,bv)if bv==nil then c2:log({code=1},"This command requires an argument.")return end;local bX=c2.commands[bv]if bX==nil then c2:log({code=1},"Command was not found.")return end;if bX.default==nil then c2:log({code=1},"Command does not have a default value to reset to.")return end;bX.value=bX.default;bX.on_reset(bX)c2:log({code=0},"Command was reset to its default value of '%s'.",bX.default)end)},state=bY.new(),cast={string=function(bv,j)return bv end,int=function(bv,b_,bX)local bv=tonumber(bv)if bv==nil then b_.problem=true;b_.reason=string.format("The argument given to '%s' must be of the type %s.",bX.name,bX.datatype)return nil end;return math.floor(bv+0.5)end,float=function(bv,b_,bX)local bv=tonumber(bv)if bv==nil then b_.problem=true;b_.reason=string.format("The argument given to '%s' must be of the type %s.",bX.name,bX.datatype)return nil end;return bv end,bool=function(bv,j)return bv and 1 or 0 end}}local c2=setmetatable(aN,c1)c2:setup_events(c2)return c2 end;function c0.assert(be,bf,bg,...)if not be then error(string.format(bg,...),bf)end end;function c0:setup_events(c2)client.set_event_callback("console_input",function(c4)return c2:process(c4)end)client.set_event_callback("shutdown",function()for j,bX in pairs(c2.commands)do if bX.special==false or bX.datatype~=nil then if bX.persist_value==true then database.write(string.format("havoc_console_%s",bX.name),bX.value)else database.write(string.format("havoc_console_%s",bX.name),bX.default)end end end end)end;function c0:log(bP,...)if self.debug==false and bP.debug==true then return end;local bF=bP.prefix;local c5=type(bP.code)=="number"and bP.code or-1;if bF==nil or bF==true then client.color_log(self.log_prefix_color[1],self.log_prefix_color[2],self.log_prefix_color[3],self.log_prefix.." \0")end;if self.state.problem==true then client.color_log(255,75,75,"[BAD INPUT] \0")elseif c5==0 then client.color_log(75,255,75,"[SUCCESS] \0")elseif c5==1 then client.color_log(255,75,75,"[ERROR] \0")elseif c5==2 then client.color_log(255,125,75,"[WARNING] \0")end;client.color_log(240,240,240,string.format(...),"\0")if self.state.problem==true then client.color_log(255,75,75," ")elseif c5==0 then client.color_log(75,255,75," ")elseif c5==1 then client.color_log(255,75,75," ")elseif c5==2 then client.color_log(255,125,75," ")else client.color_log(240,240,240," ")end end;function c0:command(br,bT,bP,bU)c0.assert(type(br)=="string",2,"Command name must be strings.")c0.assert(type(bT)=="string",2,"Command description must be strings.")c0.assert(type(bP)=="table"or type(bP)=="nil",2,"Command options must be a table or nil.")c0.assert(type(bU)=="function",2,"Command callbacks must be functions.")local bX=bR.new(self.prefix..br,bT,bP,bU)if bX.special==false or bX.datatype~=nil then local bv=database.read(string.format("havoc_console_%s",bX.name))if bv~=nil then bX.value=bv end end;self.commands[self.prefix..br]=bX end;function c0:process(c4)local bX=self:_format_console_input(c4)if self.state.problem==true then self:log({},self.state.reason)self.state.problem=false;return true end;if bX==nil then return false end;if bX.special==false then if bX.save_value==true then bX.value=bX.input_value end;bX.on_input(bX.input_value)end;return true end;function c0:_format_console_input(c4)local c=1;local br;local c6;for c7 in string.gmatch(c4,"%S+")do if c==1 then br=c7 else if c==2 then c6=c7 else c6=c6 .." "..c7 end end;c=c+1 end;local bX=self.commands[br]if bX==nil then return nil end;if bX.special==true then bX.on_input(self,c6)return bX end;if bX.datatype~=nil and c6==nil then self.state.problem=true;self.state.reason=string.format("Command '%s' expects an argument to be given (%s).",bX.name,bX.datatype)return nil end;if bX.datatype~=nil and c6~=nil then c6=self.cast[bX.datatype](c6,self.state,bX)bX.input_value=c6 end;return bX end;local c8={}local c9={__index=c8,__call=function(ca)return ca:get()end}function c8.new()local aN={frametimes={},fps_prev=0,value_prev={},last_update_time=0,timer=b5.new(true)}local ca=setmetatable(aN,c9)return ca end;function c8:get()local cb,cc=globals.realtime(),globals.absoluteframetime()if cc>0 then table.insert(self.frametimes,1,cc)end;local cd=#self.frametimes;if cd==0 then return 0 end;local ce=0;local c=0;while ce<0.5 do c=c+1;ce=ce+self.frametimes[c]if c>=cd then break end end;ce=ce/c;while c<cd do c=c+1;table.remove(self.frametimes)end;local ca=1/ce;local cf=cb-self.last_update_time;if math.abs(ca-self.fps_prev)>4 or cf>1 then self.fps_prev=ca;self.last_update_time=cb else ca=self.fps_prev end;return math.floor(ca+0.5)end;local cg={}function cg.rectangle(ch)local ci=M(ch.width/(ch.relation_camera_distance/100),ch.height/(ch.relation_camera_distance/100),0)ch.screen_dimensions=ch.screen_dimensions-ci/2;renderer.rectangle(ch.screen_dimensions.x,ch.screen_dimensions.y,ci.x,ci.y,ch.shader.r,ch.shader.g,ch.shader.b,ch.shader.a)end;function cg.texture(ch)local ci=M(ch.width/(ch.relation_camera_distance/100),ch.height/(ch.relation_camera_distance/100),0)ch.screen_dimensions=ch.screen_dimensions-ci/2;renderer.texture(ch.texture,ch.screen_dimensions.x,ch.screen_dimensions.y,ci.x,ci.y,ch.shader.r,ch.shader.g,ch.shader.b,ch.shader.a,"f")end;function cg.circle(ch)local cj=math.max(0.5,ch.radius/(ch.relation_camera_distance/100))if cj>=2 then renderer.circle(ch.screen_dimensions.x,ch.screen_dimensions.y,ch.shader.r,ch.shader.g,ch.shader.b,ch.shader.a,cj,ch.start_degrees,ch.percentage)else renderer.rectangle(ch.screen_dimensions.x,ch.screen_dimensions.y,cj*2,cj*2,ch.shader.r,ch.shader.g,ch.shader.b,ch.shader.a)end end;function cg.circle_outline(ch)local cj=ch.radius/(ch.relation_camera_distance/100)if cj>=2 then renderer.circle_outline(ch.screen_dimensions.x,ch.screen_dimensions.y,ch.shader.r,ch.shader.g,ch.shader.b,ch.shader.a,cj,ch.start_degrees,ch.percentage,ch.thickness)else renderer.rectangle(ch.screen_dimensions.x,ch.screen_dimensions.y,cj*2,cj*2,ch.shader.r,ch.shader.g,ch.shader.b,ch.shader.a)end end;local ck={}local cl={__index=ck}function ck.new(cm,cn,co,cp)return setmetatable({id=cm,shared=cn,simulation=co,hook=cp,origin=nil,shader=nil,type="circle",width=5,height=5,texture=0,radius=5,start_degrees=0,percentage=1,thickness=1,onscreen=false,occluded=true,dying=false,dead=false,lifespan=nil,lifespan_timer=aY.new(true),always_visible=false,skip_offscreen=true,max_render_distance=8192,on_frame=nil,on_tick=nil,on_kill=nil,on_dead=nil,fade_time=0,death_timer=aY.new(false),alpha_at_death=nil,relation_camera_distance=0,screen_dimensions=M(0,0,0)},cl)end;function ck:kill(cq)if self.dying==true then return end;if self.fade_time~=nil and self.fade_time>0 then if cq==true then self.fade_time=self.fade_time/2 end;self.dying=true;self.alpha_at_death=self.shader.a;self.death_timer:start()else self.dead=true end;if self.on_kill~=nil then self.on_kill(self)end end;function ck:kill_invisible()if self.shader.a==0 then self.dead=true end end;function ck:kill_occluded()if self.occluded==true then self.dead=true end end;function ck:kill_offscreen()if self.onscreen==false then self.dead=true end end;function ck:process()self.relation_camera_distance=self.origin:distance(self.shared.player_camera_position)self:process_lifespan()self:process_death()if self.on_frame~=nil then self.on_frame(self)end;if self.on_tick~=nil and self.hook.tick_this_frame==true then self.on_tick(self)end;self.screen_dimensions=self.origin:to_screen()if self.skip_offscreen==true and self.screen_dimensions~=nil then if self.screen_dimensions.x<0 or self.screen_dimensions.x>self.shared.resolution.x or self.screen_dimensions.y<0 or self.screen_dimensions.y>self.shared.resolution.y then self.screen_dimensions=nil end end;if self.screen_dimensions==nil then self.onscreen=false;return else self.onscreen=true end;if self.relation_camera_distance>self.max_render_distance then return end;if self.shader.a==0 then return end;if self.always_visible==true then self.occluded=false else if self.simulation.vischeck_this_frame==true then self:process_vischeck()end end;if self.occluded==true then return end;self:render()end;function ck:process_vischeck()local cr=0;if self.shared.is_thirdperson==true then cr=self.shared.player_camera_position:trace_line_to(self.origin)else cr=self.shared.player_camera_position:trace_line_to(self.origin,self.shared.player_eid)end;self.occluded=cr<1 end;function ck:process_lifespan()if self.dying==true or self.lifespan==nil then return end;self.lifespan_timer:event(self.lifespan,function()self:kill()end)end;function ck:process_death()if self.dying==false then return end;self.death_timer:event(self.fade_time,function()self.dead=true;return end)self.shader.a=self.alpha_at_death*(0-(self.death_timer()-self.fade_time)/self.fade_time)end;function ck:render()self.shader:update_spaces()cg[self.type](self)end;local cs={}local ct={__index=cs}function cs.new()return setmetatable({player_eid=nil,is_thirdperson=nil,is_dead=nil,is_scoped=nil,is_fake_ducking=nil,player_origin=M(0,0,0),player_eye_position=M(0,0,0),player_camera_position=M(0,0,0),player_camera_angles=x(0,0,0),player_speed=nil,player_velocity=M(0,0,0),resolution=M(0,0,0),camera_aspect=nil,fov=nil,scope_fov=nil,scope_level=nil,zoom_modifier=nil,observer_eid=nil,observer_mode=nil,observing_team=nil,observing_self=nil},ct)end;function cs:sync()self.player_eid=entity.get_local_player()self.is_fake_ducking=ui.get(ui.reference("rage","other","duck peek assist"))self.player_origin(entity.get_prop(self.player_eid,"m_vecAbsOrigin"))if self.is_fake_ducking==true then self.player_eye_position=self.player_origin:clone_offset(0,0,46)else self.player_eye_position(client.eye_position())end;self.player_camera_position(client.camera_position())self.player_camera_angles(client.camera_angles())self.player_velocity(entity.get_prop(self.player_eid,"m_vecVelocity"))self.player_speed=self.player_velocity:magnitude()if self.is_fake_ducking==true then local j,cu=ui.reference("visuals","effects","Force third person (alive)")self.is_thirdperson=ui.get(cu)else self.is_thirdperson=self.player_eye_position:distance(self.player_camera_position)>5 end;self.resolution(client.screen_size())self.camera_aspect=self.resolution.x/self.resolution.y;self.fov=ui.get(ui.reference("misc","miscellaneous","override fov"))self.scope_fov=entity.get_prop(self.player_eid,"m_iFOV")if self.scope_fov==0 or self.scope_fov==90 then self.scope_fov=self.fov end;self.is_scoped=entity.get_prop(self.player_eid,"m_bIsScoped")==1 and true or false;self.scope_level=0;if self.is_scoped==true and self.scope_fov==40 then self.scope_level=1 elseif self.is_scoped==true and self.scope_fov==15 then self.scope_level=2 end;self.zoom_modifier=ui.get(ui.reference("misc","miscellaneous","override zoom fov"))self.observer_mode=entity.get_prop(self.player_eid,"m_iObserverMode")local cv=self.player_eid;local cw=true;if self.observer_mode==4 or self.observer_mode==5 then cv=entity.get_prop(self.player_eid,"m_hObserverTarget")cw=false;local P,C,Q=entity.get_prop(cv,"m_vecAbsOrigin")if P~=nil then local cx=entity.get_prop(self.player_eid,"m_flDuckAmount")Q=Q+46+(1-cx)*18;self.player_eye_position(P,C,Q)self.player_origin(entity.get_prop(cv,"m_vecAbsOrigin"))self.player_velocity(entity.get_prop(cv,"m_vecVelocity"))self.player_speed=self.player_velocity:magnitude()end end;self.observing_self=cw;local cy=entity.get_prop(cv,"m_iTeamNum")self.observer_eid=cv;self.observing_team=cy;self.is_dead=self.observer_mode~=0 end;local cz={}local cA={__index=cz}function cz.new()return setmetatable({frametime=0,delta=0,frame=0,fps=c8.new(),vischeck_interval=0,vischeck_this_frame=nil},cA)end;function cz:sync()self.frametime=globals.absoluteframetime()self.delta=globals.absoluteframetime()*100;self.frame=self.frame+1;self:update_vischeck()end;function cz:update_vischeck()local cB=math.max(1,math.floor(self.fps()/66))self.vischeck_interval=cB;self.vischeck_this_frame=self.frame%cB==0 end;local cC={}local cD={__index=cC}function cC.new()return setmetatable({particles={},total_spawned=0,total_alive=0,unculled=0,soft_limit=512,hard_limit=1024,cull_next_particle=false,cull_particle_mode=0},cD)end;function cC:process()local cE=self.total_alive;for j,ch in pairs(self:order_for_culling())do if cE>self.hard_limit then self:remove(ch)cE=cE-1 elseif cE>self.soft_limit then ch:kill(true)cE=cE-1 end end;for j,ch in pairs(self:order_for_rendering())do if ch.dead==true then self:remove(ch)else ch:process()end end end;function cC:add(ch)self.particles[ch.id]=ch;self.total_spawned=self.total_spawned+1;self.total_alive=self.total_alive+1;ch.hook:add(ch)end;function cC:remove(ch)self.particles[ch.id]=nil;self.total_alive=self.total_alive-1;ch.hook:remove(ch)end;function cC:order_for_rendering()local cF={}for j,ch in l(self.particles,function(cG,q,r)return cG[r].relation_camera_distance<cG[q].relation_camera_distance end)do table.insert(cF,ch)end;return cF end;function cC:order_for_culling()local cF={}for j,ch in l(self.particles,function(cG,q,r)return cG[r].id>cG[q].id end)do table.insert(cF,ch)end;return cF end;local cH={}local cI={__index=cH}function cH.new()return setmetatable({connected=false,crashed=false,enabled=true},cI)end;function cH:sync()self.connected=entity.get_local_player()~=nil end;function cH:available()return self.connected==true and self.crashed==false and self.enabled==true end;local cJ={}local cK={__index=cJ}function cJ.new(br)return setmetatable({name=br,particles={},total_spawned=0,total_alive=0,tick_interval=0.03125,tick_interval_timer=aY.new(true),tick_this_frame=false},cK)end;function cJ:add(ch)self.particles[ch.id]=ch;self.total_spawned=self.total_spawned+1;self.total_alive=self.total_alive+1 end;function cJ:remove(ch)self.particles[ch.id]=nil;self.total_alive=self.total_alive-1 end;function cJ:cull()for j,ch in pairs(self.particles)do if ch.dying==false then ch:kill()break end end end;function cJ:update_tick_this_frame()self.tick_interval_timer:event(self.tick_interval,function()self.tick_this_frame=true;self.tick_interval_timer:restart()return end)self.tick_this_frame=false end;local cL={}local cM={__index=cL}function cL.new()return setmetatable({hooks={}},cM)end;function cL:create(cN)local cp=cJ.new(cN)table.insert(self.hooks,cp)return cp end;local cO={}local cP={__index=cO}function cO.new(cn)return setmetatable({enabled=false,shared=cn,groups={},colors={theme=aA.rgb(219,184,3),blue=aA.rgb(18,217,255),purple=aA.rgb(173,153,255),normal=aA.rgb(235,235,235),good=aA.rgb(138,255,77),notice=aA.rgb(219,184,3),warning=aA.rgb(255,163,71),error=aA.rgb(255,71,71)}},cP)end;function cO:line(cQ,c3,cR,cS)if self.groups[cQ]==nil then self.groups[cQ]={}end;self.groups[cQ][c3]={title=c3,color=self.colors[cR],text=cS}end;function cO:render()if self.enabled==false then return end;local cT=M(self.shared.resolution.x/5,180)local cU=M(400,0)self:render_line(aA.rgb(20,20,20,240),cT,cU,{title="VEL Vision Debug Panel",color=self.colors["theme"],text=""})cT.y=cT.y+20;for cV,cQ in pairs(self.groups)do self:render_line(aA.rgb(20,20,20,200),cT,cU,{title=cV,color=self.colors["normal"],text=""})cT.y=cT.y+20;local cW=0;for j,cX in pairs(cQ)do cW=cW+1;local cY;if cW%2==0 then cY=aA.rgb(20,20,20,100)else cY=aA.rgb(20,20,20,50)end;self:render_line(cY,cT,cU,cX)cT.y=cT.y+20 end end end;function cO:render_line(cZ,cT,cU,cX)renderer.rectangle(cT.x,cT.y,cU.x,20,cZ.r,cZ.g,cZ.b,cZ.a)renderer.text(cT.x+10,cT.y+4,cX.color.r,cX.color.g,cX.color.b,cX.color.a,"l",0,cX.title)renderer.text(cT.x+cU.x-10,cT.y+4,cX.color.r,cX.color.g,cX.color.b,cX.color.a,"r",0,cX.text)end;local c_={}local d0={__index=c_}local function d1(ch)return setmetatable({particle=ch,float_timer=aY.new(true),orbit_angle=x(0,0,0)},d0)end;function c_:orbit(d2,d3,d4,bP)bP=bP or{}local d5=self:get_orbit_vector(d2,bP.speed,d4,bP.traces,bP.collision,bP.ignore)self:move_target(d5,d3)end;function c_:orbit_easing(d2,d3,d6,d4,bP)bP=bP or{}local d5=self:get_orbit_vector(d2,bP.speed,d4,bP.traces,bP.collision,bP.ignore)self:move_target_easing(d5,d3,d6)end;function c_:get_orbit_vector(d2,d7,d4,d8,d9,da)d7=d7 or 1;d8=d8 or 24;if d9==true then local db=d4;for c=1,d8 do local dc=x(0,360/d8*c,0)local d5=d2+dc:to_forward_vector()*d4;local dd=d2:trace_line_to(d5,da)local de=d4*dd;if de<db then db=de end end;self.orbit_angle.y=(self.orbit_angle.y+d7*self.particle.simulation.delta)%360;return d2+self.orbit_angle:to_forward_vector()*db end end;function c_:float_x(df,dg)self.particle.origin.x=self.particle.origin.x+math.sin(self.float_timer()*math.pi*dg)*df*self.particle.simulation.delta end;function c_:float_y(df,dg)self.particle.origin.y=self.particle.origin.y+math.sin(self.float_timer()*math.pi*dg)*df*self.particle.simulation.delta end;function c_:float_z(df,dg)self.particle.origin.z=self.particle.origin.z+math.sin(self.float_timer()*math.pi*dg)*df*self.particle.simulation.delta end;function c_:move_target(aw,dh)self.particle.origin=self.particle.origin+(aw-self.particle.origin)*dh*self.particle.simulation.delta end;function c_:move_target_easing(aw,dh,d6)self.particle.origin=self.particle.origin+(aw-self.particle.origin)*d6*dh*self.particle.simulation.delta end;function c_:move_forward(di,dh)self.particle.origin=self.particle.origin+di*dh*self.particle.simulation.delta end;function c_:move_forward_easing(di,dh,d6)self.particle.origin=self.particle.origin+di*d6*dh*self.particle.simulation.delta end;local dj={}local dk={__index=dj}function dj.new()local cn=cs.new()return setmetatable({version="1.0.1",shared=cn,simulation=cz.new(),particle_manager=cC.new(),hook_manager=cL.new(),state=cH.new(),console=c0.new("illu",{log_prefix="[Illusion]",log_prefix_color={240,206,72}}),panic=s.new(function(c2,b_)c2:log({code=1},"The render engine encountered a fatal error and has been shut down.")b_.crashed=true end),debug_panel=cO.new(cn)},dk):init()end;function dj:init()self.state:sync()self.simulation:sync()self.shared:sync()return self end;function dj:process()self.state:sync()if self.state:available()==false then return end;self.simulation:sync()self.shared:sync()self:process_hook_tick_rate()self.particle_manager:process()self:debug_lines()self.debug_panel:render()end;function dj:process_hook_tick_rate()for j,cp in pairs(self.hook_manager.hooks)do cp:update_tick_this_frame()end end;function dj:debug_lines()self.debug_panel:line("player","entity index","normal",self.shared.player_eid)self.debug_panel:line("player states","is thirdperson","normal",self.shared.is_thirdperson and"yes"or"no")self.debug_panel:line("player states","is dead","normal",self.shared.is_dead and"yes"or"no")self.debug_panel:line("player states","is scoped","normal",self.shared.is_scoped and"yes"or"no")self.debug_panel:line("player states","is fake ducking","normal",self.shared.is_fake_ducking and"yes"or"no")self.debug_panel:line("player world info","origin","normal",self.shared.player_origin:rounded_zero())self.debug_panel:line("player world info","eye position","normal",self.shared.player_eye_position:rounded_zero())self.debug_panel:line("player world info","camera position","normal",self.shared.player_camera_position:rounded_zero())self.debug_panel:line("player world info","camera angles","normal",self.shared.player_camera_angles:rounded_zero())self.debug_panel:line("player world info","speed","normal",math.round(self.shared.player_speed,0))self.debug_panel:line("player world info","velocity vector","normal",self.shared.player_velocity:rounded_zero())self.debug_panel:line("screen","resolution","normal",string.format("%sx%s",self.shared.resolution.x,self.shared.resolution.y))self.debug_panel:line("screen","camera aspect","normal",math.round(self.shared.camera_aspect,4))self.debug_panel:line("screen","field of view","normal",math.round(self.shared.fov,0))self.debug_panel:line("screen","scoped field of view","normal",math.round(self.shared.scope_fov,0))self.debug_panel:line("screen","scope level","normal",self.shared.scope_level)self.debug_panel:line("screen","scoped field of view modifier","normal",math.round(self.shared.zoom_modifier,0))self.debug_panel:line("observer","entity index","normal",self.shared.observer_eid)self.debug_panel:line("observer","mode","normal",self.shared.observer_mode)self.debug_panel:line("observer","team","normal",self.shared.observing_team)self.debug_panel:line("observer","observing self","normal",self.shared.observing_self and"yes"or"no")self.debug_panel:line("particle manager","total spawned","normal",self.particle_manager.total_spawned)local dl="normal"if self.particle_manager.total_alive>=self.particle_manager.hard_limit then dl="warning"elseif self.particle_manager.total_alive>=self.particle_manager.soft_limit then dl="notice"end;self.debug_panel:line("particle manager","total alive",dl,self.particle_manager.total_alive)local dm="normal"if self.particle_manager.soft_limit>=8192 then dm="error"elseif self.particle_manager.soft_limit>=4096 then dm="warning"elseif self.particle_manager.soft_limit>=2048 then dm="notice"end;self.debug_panel:line("particle manager","soft limit",dm,self.particle_manager.soft_limit)local dn="normal"if self.particle_manager.hard_limit>=8192 then dn="error"elseif self.particle_manager.hard_limit>=4096 then dn="warning"elseif self.particle_manager.hard_limit>=2048 then dn="notice"end;self.debug_panel:line("particle manager","hard limit",dn,self.particle_manager.hard_limit)self.debug_panel:line("simulation","frametime","normal",math.round(self.simulation.frametime,4))self.debug_panel:line("simulation","delta","normal",math.round(self.simulation.delta,4))self.debug_panel:line("simulation","frame","normal",self.simulation.frame)self.debug_panel:line("simulation","fps","normal",self.simulation.fps())self.debug_panel:line("simulation","vischeck interval","normal",self.simulation.vischeck_interval)for j,cp in pairs(self.hook_manager.hooks)do self.debug_panel:line("hook manager",cp.name,"normal",string.format("%s total | %s alive",cp.total_spawned,cp.total_alive))end end;local dp=dj.new()local dq={}local dr={__index=dq}function dq.new(cp)return setmetatable({hook=cp,timer_standard=aX.standard,timer_tick=aX.tick,timer_countdown_c=aX.countdown,vector=M,angle=x,shader=aA,animator=d1,shared=dp.shared,simulation=dp.simulation},dr)end;function dq:create()local ds=dp.particle_manager.total_spawned+1;local ch=ck.new(ds,dp.shared,dp.simulation,self.hook)dp.particle_manager:add(ch)return ch end;function dq:wipe()for j,ch in pairs(self.hook.particles)do self.hook:remove(ch)dp.particle_manager:remove(ch)end end;function dq:available()return dp.state:available()end;function dq:set_tick_interval(dt)self.hook.tick_interval=dt end;local du=bD.new("config","presets")du:label("--------------------------------------------------")du:label(string.format("VEL Vision - %s - v%s",a,dp.version))local dv=du:checkbox("Enable VEL Vision")dv(true)dv:add_callback(function()dp.state.enabled=dv()end)local dw=du:slider("Soft particle limit",5,13,{default=10,tooltips={[5]="32",[6]="64",[7]="128",[8]="256",[9]="512",[10]="1024",[11]="2048",[12]="4096",[13]="8192"}})local dx=du:slider("Hard particle limit",5,13,{default=11,tooltips={[5]="32",[6]="64",[7]="128",[8]="256",[9]="512",[10]="1024",[11]="2048",[12]="4096",[13]="8192"}})dw:add_callback(function()local dy=dw()local dz=dx()if dy>dz then dx(dy)end;dp.particle_manager.soft_limit=2^dy end)dx:add_callback(function()local dy=dw()local dz=dx()if dz<dy then dw(dz)end;dp.particle_manager.hard_limit=2^dz end)local dA=du:checkbox("Enable debug panel")dA:add_callback(function()dp.debug_panel.enabled=dA()end)dv:add_children({dw,dx,dA})du:load_from_db()client.set_event_callback("paint",function()if dp.panic:test(dp.console,dp.state)==false then return end;dp.panic:start()dp:process()dp.panic:stop()end)client.set_event_callback("player_connect_full",function()if dp.state:available()==false then return end;for j,cp in pairs(dp.hook_manager.hooks)do for j,ch in pairs(cp.particles)do dp.particle_manager:remove(ch)end end end)client.set_event_callback("shutdown",function()du:save_to_db()end)function package.vel_hook(cN)local cp=dp.hook_manager:create(cN)return b and dq.new(cp)or nil end